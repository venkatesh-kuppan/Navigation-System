/* Generated by Together */

#ifndef CPOIDATABASE_H
#define CPOIDATABASE_H
#include <map>

#include "CPOI.h"
#include "CWayPoint.h"

#define MAX_ENTRIES_IN_DATABASE 10
/**
 * The database class to store all the POIs.
 * This class provides a feature to add new POIs to the database, and return the pointer to an existing database. 
 */
class CPOIDataBase {
public:

	typedef  std::map<string, CPOI> POI_map;
    /**
     * The default constructor for the class 
     */
    CPOIDataBase();
    ~CPOIDataBase();

    /**
     * API to add new POIs to the database
     * 
     * 
     * Arguments:
     * 
     * poi : The reference to the POI to be added to the database
     * 
     * Return:
     * None.
     */
    void addPOI(CPOI const & poi);

    /**
     * API that returns the pointer to the existing POI.
     * Can be used to return the pointer to object of POI that is found in the database
     * 
     * Arguments:
     * 
     * string name: The name of the POI to be serached in the database.
     * 
     * 
     * Return:
     * CPOI* : the address for the matched POI. returns NULL if the POI is not found in the database.
     */
    CPOI* getPtrToPOI(string name);

    POI_map getPOIMap(void) const;

    void clearPOIDatabase();

    void print();

private:

    /**
     * The max number of POIs in the database. 
     * Here max. number is set as 10.
     * @clientCardinality 1
     * @supplierCardinality 10 
     * @link association*/
    //CPOI m_POI[10];
    	POI_map m_POI;
    /** @link dependency */
    /*# t_poi lnkt_poi; */

    /** @link dependency */
    /*# CPOI lnkCPOI; */

    /** @link dependency */
    /*# CWayPoint lnkCWayPoint; */
};
#endif //CPOIDATABASE_H

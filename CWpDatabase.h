/* Generated by Together */

#ifndef CWPDATABASE_H
#define CWPDATABASE_H
#include <map>
#include "CWayPoint.h"

/**
 * The CWayDatabase provides the mechanism to maintain the database for the waypoint.
 *  It provides provision for adding new waypoints to the database, searching for a required waypoint in the database.
 */
class CWpDatabase {

public:

	 typedef std::map<std::string,CWayPoint> Waypoint_map;
    ~CWpDatabase();

    CWpDatabase();

    /**
     * The API will add the waypoint to the Waypoint Database. 
     * It holds the list of all the waypoints.
     * 
     * Arguments:
     * CWayPoint const& Wp - The reference to the waypoint to be added to the database.
     * 
     * Return:
     * none. 
     */
    void addWayPoint(CWayPoint const&  Wp);

    /**
     * The API prints all the waypoints in the database.
     * 
     * Argument:
     * None.
     * 
     * Return:
     * None. 
     */
    void print();

    /**
     * The API searches for the waypoint name in the waypoint database. If a match is found, then the address of the matched waypoint is returned.
     * 
     * Argument:
     * WpName: The name of the waypoint to be searched in the database.
     * 
     * Return:
     * The address of the matched waypoint  in the database.
     * If no match found for the name, then return NULL. 
     */
    CWayPoint* getPtrToWaypoint(std::string WpName);

    Waypoint_map getWaypointMap(void) const;
    void clearWaypointDatabase(void);

private:
    Waypoint_map m_Waypoint;

    /** @link dependency */
    /*# CWayPoint lnkCWayPoint; */
};
#endif //CWPDATABASE_H

/* Generated by Together */

#include "CWpDatabase.h"

using namespace std;

CWpDatabase::~CWpDatabase()
{
	cout<<"WPDB destructor"<<endl;
}

void CWpDatabase::print()
{
	for(map<string,CWayPoint>::const_iterator it = m_Waypoint.begin(); it != m_Waypoint.end(); ++it)
	{
		cout<< it->second;
	}
}

CWpDatabase::CWpDatabase()
{

}

void CWpDatabase::addWayPoint(CWayPoint const&  Wp)
{
	/**
	 * insert the waypoint in the WpDatabase
	 */
	m_Waypoint.insert(std::pair<string,CWayPoint>(Wp.getName(),Wp));
}

CWayPoint* CWpDatabase::getPtrToWaypoint(std::string WpName)
{
	/**
	 * search through the database to find the required name of desitnation.
	 */
	bool matchFound = 0;
	map<string, CWayPoint>::iterator ii;
	ii = m_Waypoint.find(WpName);
	if (ii != m_Waypoint.end())
	{
		matchFound = 1;
	}
	/**
	 * if match found then return the address of the matched POI.
	 */
	return ((matchFound == 0)? NULL: &m_Waypoint[WpName]);
}

CWpDatabase::Waypoint_map CWpDatabase::getWaypointMap(void) const
{
	return m_Waypoint;
}

void CWpDatabase::clearWaypointDatabase(void)
{
	m_Waypoint.clear();
}

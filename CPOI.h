/* Generated by Together */

#ifndef CPOI_H
#define CPOI_H

#include <iostream>
#include <stdlib.h>
#include "CWayPoint.h"
#include <string.h>


/**
 * The enum list for all the POIs on the route. eg. School, Monuments, Restaurants, etc. 
 */
enum t_poi{
	Restaurant_e,
	Krankenhaus_e,
	School_e,
	Monument_e,
    BusStation_e,
    DefaultPOI_e,
    MaxPOI
};



/**
 * The main class holds all the Points of Interest and the description of POIs on the Route.
 */
class CPOI: public CWayPoint {
public:

    CPOI(t_poi type, std::string name, std::string description, double latitude, double longitude);

    /**
     * The default constructor. 
     */
    CPOI();

    virtual ~CPOI();

    /**
     * API to print the point of Interests.
     * 
     * Arguments: 
     * None.
     * 
     * Return:
     * None.
     */
    void print(int format);

    /**
     * API to return all the values for the POI. 
     * Return values include, the type of POI, the description of POI,
     * co-ordinates of POI.
     * 
     * Arguments:
     * int& latitude : the reference for the latitdue to be returned
     * int& longitude : the reference for the longitude to be returned
     * string& name:  the reference for the name to be returned
     * t_poi& type:  the reference for the POI type to be returned
     * string& description :  the reference for the description of POI  to be returned
     * 
     * Return:
     * None.
     */
    void getAllDataByReference(double& latitude, double& longitude, std::string& name, t_poi& type, std::string& description) const;

  friend  ostream& operator << (ostream& os,const CPOI& poi);
private:


    /**
     * The type of POI i.e. Restaurants, schools, krankenhaus, etc. 
     */
    t_poi m_type;

    /**
     * Description of the POI. 
     */
    std::string m_description;
};

#endif //CPOI_H
